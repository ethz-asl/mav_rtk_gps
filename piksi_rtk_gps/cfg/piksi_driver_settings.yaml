
# Use udevrule for piksi:
# SUBSYSTEMS=="usb", KERNEL=="ttyUSB[0-9]*", ATTRS{idVendor}=="0403", ATTRS{idProduct}=="6014", SYMLINK+="piksi", MODE="0666", GROUP="dialout"
serial_port: '/dev/piksi'
baud_rate: 1000000
base_station_mode: false
# whenever possible, use network broadcast, not global ip broadcast
# use ifconfig to show network broadcast (or calculate it yourself....)
broadcast_addr: 10.10.50.255
broadcast_port: 26078
base_station_ip_for_latency_estimation: 10.10.50.1 # ip base station if you want to estimate latency
# Coordinate frame of the GPS receiver with respect to the base link
frame_id: 'base_link'

# ROS message types to be published
publish_navsatfix_rtk: true
publish_navsatfix_spp: true
publish_piksibaseline: true

# SBP Navigation message types to be published
publish_gps_time: true
publish_dops: true
publish_pos_ecef: true
publish_pos_llh: true
publish_baseline_ecef: true
publish_baseline_ned: true
publish_vel_ecef: true
publish_vel_ned: true

# Logging message types to be published
publish_log: true

# System message types to be published
publish_heartbeat: true

# Tracking message types to be published
publish_tracking_state: true

# Custom debug messages
publish_piksidebug: true #published only if at least one of the following is pub: heartbeat, tracking_state, navsatfix_rtk
publish_uart_state: true
publish_wifi_corrections_received: true # will not be published if base_station_mode is true

# Covariances to be published in the NavSatFix message
# Single Point Positioning (SPP)
var_spp_x: 25
var_spp_y: 25
var_spp_z: 64

# RTK float mode
var_rtk_float_x: 25
var_rtk_float_y: 25
var_rtk_float_z: 64

# RTK fix mode
var_rtk_fix_x: 0.0049
var_rtk_fix_y: 0.0049
var_rtk_fix_z: 0.01
